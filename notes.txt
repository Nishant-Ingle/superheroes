# Features

1 Browse a list of superheroes -> Get all
  Search bar
2 View detailed information about each superhero -> Get sh api, cache
3 Add new superhero -> Post api
4 Update superhero -> put api
5 Update superhero only if you have editing rights -> rbac
6 Startup db fetch from API
* Team Formation
  7 Random team formation
  8 Manual team formation
    9 Recommendations of right panel based on balanced powers


Future additions:
  10 [Team] Compare teams and predict winner with explanation
  11 [Team] Fill remaining randomly
  12 [Team] What if we want to have a filtered random selection


Steps:

  1. DB Schema Design, help: chatgpt, document for hero attributes - d
  [Fast API]

  2. API design, help: chatgpt, doc for api(swagger) - d
  3. Comments - d
  4. Type update & annotations - d
     https://stackoverflow.com/questions/15853469/putting-current-class-as-return-type-annotation
  5. Error handling - d
  6. Logging - d
  7. Search API - d

  [React NextJS]
  10. UI
      - wireframes of pages - d
      - superhero get all page -
      - superhero get details
      - superhero update
      - superhero create new

      - teams pages
      - auth/n page

  11. Containerize with Dockerfile: psql, react, fast-api

  8. DB - d
  9. Caching - d

  12. Teams APIs
  13. Teams UI
  14. RBAC auth/z


# Marking

* Code Quality: Optimized, readable, commented code, type annotations
* Functionality: Handle all cases, error handling.
* UI Design: UI Wireframes, Bootstrap
* Doc: Readme, Swagger
* Comm: Script


# APIs

Get all superheroes - d
Get superhero - d
Add superhero - d
Update superhero - d


# Pending/Q&A

1. Multithreading
2. id function built-in
3. deepcopy of superhero list in python
4. Singleton in Python, metaclass
5. Async def
6. Private variable
7. Query params superhero_id
8. Pydantic
9. Class methods - superhero class from_dict
10. Optional
11. init.py
12. decorators
13. Logging to a file
14. If no image_url or image_url = null then ?


# Script

1. UUID instead of ID
2. Sql injection prevention
3. User has to remember id and give id for new superhero
4. Superhero: Has id, name, (inte, pow, sp, str) and img url.
5. 20% cache, only app has access to db
